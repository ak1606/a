import java.util.*;

class Edge implements Comparable<Edge> {
  int src, dest, weight;

  Edge(int src, int dest, int weight) {
    this.src = src;
    this.dest = dest;
    this.weight = weight;
  }

  public int compareTo(Edge other) {
    return this.weight - other.weight;
  }
}

class KruskalMST {
  int V, E;
  List<Edge> edges;

  KruskalMST(int V, int E) {
    this.V = V;
    this.E = E;
    edges = new ArrayList<>();
  }

  void addEdge(int src, int dest, int weight) {
    edges.add(new Edge(src, dest, weight));
  }

  int findParent(int[] parent, int v) {
    if (parent[v] == -1) {
      return v;
    }
    return findParent(parent, parent[v]);
  }

  void union(int[] parent, int x, int y) {
    int xRoot = findParent(parent, x);
    int yRoot = findParent(parent, y);
    parent[xRoot] = yRoot;
  }

  void kruskalMST() {
    Collections.sort(edges);
    int[] parent = new int[V + 1];
    Arrays.fill(parent, -1);

    List<Edge> mst = new ArrayList<>();
    int mstWeight = 0;

    for (Edge edge : edges) {
      int x = findParent(parent, edge.src);
      int y = findParent(parent, edge.dest);

      if (x != y) {
        mst.add(edge);
        union(parent, x, y);
        mstWeight += edge.weight;
      }
    }

    System.out.println("Total weight of MST: " + mstWeight);
    System.out.println("Edges in MST:");
    for (Edge edge : mst) {
      System.out.println(edge.src + " - " + edge.dest + ": " + edge.weight);
    }

  }
}

public class Assig4 {
  public static void main(String[] args) {

    Scanner sc = new Scanner(System.in);
    int V, E;
    System.out.println("Enter number of Vertices: ");
    V = sc.nextInt();

    System.out.println("Enter number of Edges: ");
    E = sc.nextInt();

    KruskalMST graph = new KruskalMST(V, E);
    for (int i = 0; i < E; i++) {
      System.out.println("Enter details for Edge " + (i + 1) + ":");
      System.out.println("Enter source:");
      int src = sc.nextInt();
      System.out.println("Enter destination: ");
      int des = sc.nextInt();
      System.out.println("Enter weight: ");
      int weight = sc.nextInt();
      graph.addEdge(src, des, weight);
    }
    graph.kruskalMST();
  }
}
